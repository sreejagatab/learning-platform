{"version":3,"file":"static/js/81.bc979571.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/LockOutlined.js","../node_modules/@mui/material/AlertTitle/alertTitleClasses.js","../node_modules/@mui/material/AlertTitle/AlertTitle.js","../node_modules/@mui/icons-material/esm/AdminPanelSettings.js","components/common/DemoCredentials.js","pages/Login.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2M9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9zm9 14H6V10h12zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2\"\n}), 'LockOutlined');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAlertTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiAlertTitle', slot);\n}\nconst alertTitleClasses = generateUtilityClasses('MuiAlertTitle', ['root']);\nexport default alertTitleClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Typography from '../Typography';\nimport { getAlertTitleUtilityClass } from './alertTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAlertTitleUtilityClass, classes);\n};\nconst AlertTitleRoot = styled(Typography, {\n  name: 'MuiAlertTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  return {\n    fontWeight: theme.typography.fontWeightMedium,\n    marginTop: -2\n  };\n});\nconst AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAlertTitle'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AlertTitleRoot, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AlertTitle;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 11c.34 0 .67.04 1 .09V6.27L10.5 3 3 6.27v4.91c0 4.54 3.2 8.79 7.5 9.82.55-.13 1.08-.32 1.6-.55-.69-.98-1.1-2.17-1.1-3.45 0-3.31 2.69-6 6-6\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 13c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4m0 1.38c.62 0 1.12.51 1.12 1.12s-.51 1.12-1.12 1.12-1.12-.51-1.12-1.12.5-1.12 1.12-1.12m0 5.37c-.93 0-1.74-.46-2.24-1.17.05-.72 1.51-1.08 2.24-1.08s2.19.36 2.24 1.08c-.5.71-1.31 1.17-2.24 1.17\"\n}, \"1\")], 'AdminPanelSettings');","import React from 'react';\nimport { Box, Typography, Paper, Alert, AlertTitle, List, ListItem, ListItemText, Divider, Button } from '@mui/material';\nimport { AdminPanelSettings as AdminIcon, Person as UserIcon, Login as LoginIcon } from '@mui/icons-material';\n\n/**\n * Component to display demo credentials in development mode\n * @param {Object} props - Component props\n * @param {Function} props.onSelectCredentials - Callback when credentials are selected\n */\nconst DemoCredentials = ({ onSelectCredentials }) => {\n  return (\n    <Paper elevation={0} sx={{ mb: 3, p: 2, bgcolor: 'background.default' }}>\n      <Alert severity=\"info\" sx={{ mb: 2 }}>\n        <AlertTitle>Demo Accounts Available</AlertTitle>\n        Use these credentials to explore the application in development mode\n      </Alert>\n\n      <List sx={{ bgcolor: 'background.paper', borderRadius: 1 }}>\n        <ListItem\n          secondaryAction={\n            onSelectCredentials && (\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                startIcon={<LoginIcon />}\n                onClick={() => onSelectCredentials({\n                  email: 'admin@learnsphere.dev',\n                  password: 'admin123'\n                })}\n              >\n                Use Admin\n              </Button>\n            )\n          }\n        >\n          <AdminIcon color=\"primary\" sx={{ mr: 2 }} />\n          <ListItemText\n            primary=\"Admin Account\"\n            secondary={\n              <Box>\n                <Typography variant=\"body2\" component=\"span\">Email: </Typography>\n                <Typography variant=\"body2\" component=\"span\" sx={{ fontWeight: 'bold' }}>\n                  admin@learnsphere.dev\n                </Typography>\n                <br />\n                <Typography variant=\"body2\" component=\"span\">Password: </Typography>\n                <Typography variant=\"body2\" component=\"span\" sx={{ fontWeight: 'bold' }}>\n                  admin123\n                </Typography>\n              </Box>\n            }\n          />\n        </ListItem>\n\n        <Divider variant=\"inset\" component=\"li\" />\n\n        <ListItem\n          secondaryAction={\n            onSelectCredentials && (\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                color=\"secondary\"\n                startIcon={<LoginIcon />}\n                onClick={() => onSelectCredentials({\n                  email: 'user@learnsphere.dev',\n                  password: 'demo123'\n                })}\n              >\n                Use User\n              </Button>\n            )\n          }\n        >\n          <UserIcon color=\"secondary\" sx={{ mr: 2 }} />\n          <ListItemText\n            primary=\"Regular User Account\"\n            secondary={\n              <Box>\n                <Typography variant=\"body2\" component=\"span\">Email: </Typography>\n                <Typography variant=\"body2\" component=\"span\" sx={{ fontWeight: 'bold' }}>\n                  user@learnsphere.dev\n                </Typography>\n                <br />\n                <Typography variant=\"body2\" component=\"span\">Password: </Typography>\n                <Typography variant=\"body2\" component=\"span\" sx={{ fontWeight: 'bold' }}>\n                  demo123\n                </Typography>\n              </Box>\n            }\n          />\n        </ListItem>\n      </List>\n    </Paper>\n  );\n};\n\nexport default DemoCredentials;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  Link,\n  Paper,\n  Avatar,\n  CircularProgress,\n  Alert,\n} from '@mui/material';\nimport { LockOutlined as LockOutlinedIcon } from '@mui/icons-material';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport AuthContext from '../context/AuthContext';\nimport DemoCredentials from '../components/common/DemoCredentials';\n\nconst Login = () => {\n  const { login, isAuthenticated, loading, error, clearError } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [localError, setLocalError] = useState('');\n\n  // Redirect if already authenticated\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate('/dashboard');\n    }\n\n    // Clear error when component unmounts\n    return () => {\n      clearError();\n    };\n  }, [isAuthenticated, navigate, clearError]);\n\n  // Form validation schema\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email('Enter a valid email')\n      .required('Email is required'),\n    password: Yup.string()\n      .required('Password is required')\n  });\n\n  // Form handler\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema,\n    onSubmit: async (values) => {\n      setLocalError('');\n\n      try {\n        const success = await login(values.email, values.password);\n\n        if (success) {\n          navigate('/dashboard');\n        }\n      } catch (err) {\n        setLocalError('An unexpected error occurred. Please try again.');\n      }\n    }\n  });\n\n  // Check if we're in development mode\n  const isDevelopment = process.env.NODE_ENV === 'development';\n\n  // Handle selecting demo credentials\n  const handleSelectCredentials = (credentials) => {\n    formik.setValues({\n      email: credentials.email,\n      password: credentials.password\n    });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {/* Show demo credentials in development mode */}\n      {isDevelopment && <DemoCredentials onSelectCredentials={handleSelectCredentials} />}\n\n      <Paper\n        elevation={3}\n        sx={{\n          marginTop: isDevelopment ? 2 : 8,\n          padding: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n\n        {(error || localError) && (\n          <Alert severity=\"error\" sx={{ mt: 2, width: '100%' }}>\n            {error || localError}\n          </Alert>\n        )}\n\n        <Box component=\"form\" onSubmit={formik.handleSubmit} sx={{ mt: 1, width: '100%' }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            disabled={loading}\n          >\n            {loading ? <CircularProgress size={24} /> : 'Sign In'}\n          </Button>\n\n          <Grid container>\n            <Grid item xs>\n              <Link component={RouterLink} to=\"/forgot-password\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link component={RouterLink} to=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["createSvgIcon","_jsx","d","generateUtilityClasses","styled","Typography","name","slot","overridesResolver","props","styles","root","_ref","theme","fontWeight","typography","fontWeightMedium","marginTop","Login","login","isAuthenticated","loading","error","clearError","useContext","AuthContext","navigate","useNavigate","localError","setLocalError","useState","useEffect","validationSchema","Yup","email","required","password","formik","useFormik","initialValues","onSubmit","async","values","err","isDevelopment","process","_jsxs","Container","component","maxWidth","children","Paper","elevation","sx","padding","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","variant","Alert","severity","mt","width","Box","handleSubmit","TextField","margin","fullWidth","id","label","autoComplete","autoFocus","value","onChange","handleChange","onBlur","handleBlur","touched","Boolean","errors","helperText","type","Button","mb","disabled","CircularProgress","size","Grid","container","item","xs","Link","RouterLink","to"],"sourceRoot":""}