{"version":3,"file":"static/js/378.c0f1c06f.chunk.js","mappings":"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","sources":["pages/Gamification.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Grid,\n  Paper,\n  Divider,\n  CircularProgress,\n  Tabs,\n  Tab\n} from '@mui/material';\nimport { useState } from 'react';\nimport GamificationContext from '../context/GamificationContext';\nimport {\n  GamificationSummary,\n  BadgesList,\n  Leaderboard\n} from '../components/gamification';\n\n// Tab Panel component\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`gamification-tabpanel-${index}`}\n      aria-labelledby={`gamification-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nconst Gamification = () => {\n  const {\n    fetchGamificationData,\n    fetchBadges,\n    fetchLeaderboard,\n    loading,\n    error,\n    recordActivity\n  } = useContext(GamificationContext);\n\n  const [tabValue, setTabValue] = useState(0);\n\n  useEffect(() => {\n    // Fetch all gamification data\n    fetchGamificationData();\n    fetchBadges();\n    fetchLeaderboard();\n\n    // Record activity for gamification page visit\n    recordActivity('gamification_visit', 0, { source: 'gamification_page' });\n  }, [fetchGamificationData, fetchBadges, fetchLeaderboard, recordActivity]);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '70vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Gamification\n        </Typography>\n        <Paper sx={{ p: 3, textAlign: 'center' }}>\n          <Typography color=\"error\" variant=\"body1\">\n            {error}\n          </Typography>\n        </Paper>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Your Learning Journey\n      </Typography>\n\n      <Paper sx={{ mb: 4 }}>\n        <Tabs\n          value={tabValue}\n          onChange={handleTabChange}\n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          <Tab label=\"Progress\" />\n          <Tab label=\"Achievements\" />\n          <Tab label=\"Leaderboard\" />\n        </Tabs>\n\n        <TabPanel value={tabValue} index={0}>\n          <GamificationSummary />\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={1}>\n          <Typography variant=\"h5\" gutterBottom>\n            Your Achievements\n          </Typography>\n          <Typography variant=\"body1\" paragraph>\n            Earn badges by completing learning activities, maintaining streaks, and creating content.\n          </Typography>\n          <BadgesList showUnearned={true} />\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={2}>\n          <Typography variant=\"h5\" gutterBottom>\n            Learning Leaderboard\n          </Typography>\n          <Typography variant=\"body1\" paragraph>\n            See how you compare with other learners on the platform.\n          </Typography>\n          <Leaderboard />\n        </TabPanel>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Gamification;\n"],"names":["TabPanel","props","children","value","index","other","_jsx","role","hidden","id","Box","sx","p","Gamification","fetchGamificationData","fetchBadges","fetchLeaderboard","loading","error","recordActivity","useContext","GamificationContext","tabValue","setTabValue","useState","useEffect","source","display","justifyContent","alignItems","minHeight","CircularProgress","_jsxs","Container","maxWidth","mt","mb","Typography","variant","component","gutterBottom","Paper","textAlign","color","Tabs","onChange","handleTabChange","event","newValue","indicatorColor","textColor","Tab","label","GamificationSummary","paragraph","BadgesList","showUnearned","Leaderboard"],"sourceRoot":""}