{"version":3,"file":"static/js/864.5aaea8d7.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/RefreshOutlined.js","../node_modules/@mui/icons-material/esm/Send.js","../node_modules/@mui/icons-material/esm/CreateNewFolder.js","pages/Learn.js","../node_modules/@mui/icons-material/esm/Link.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4z\"\n}), 'RefreshOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 6h-8l-2-2H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2m-1 8h-3v3h-2v-3h-3v-2h3V9h2v3h3z\"\n}), 'CreateNewFolder');","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Paper,\n  Chip,\n  Divider,\n  CircularProgress,\n  Card,\n  CardContent,\n  Grid,\n  IconButton,\n  Link,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  MenuItem,\n  Select,\n  FormControl,\n  InputLabel,\n} from '@mui/material';\nimport {\n  Send as SendIcon,\n  BookmarkAdd as BookmarkIcon,\n  ExpandMore as ExpandMoreIcon,\n  Link as LinkIcon,\n  RefreshOutlined as RefreshIcon,\n  CreateNewFolder as PathIcon,\n} from '@mui/icons-material';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { toast } from 'react-toastify';\n\nimport LearningContext from '../context/LearningContext';\nimport AuthContext from '../context/AuthContext';\n\nconst Learn = () => {\n  const {\n    askQuestion,\n    askFollowUpQuestion,\n    clearSession,\n    saveContent,\n    generateLearningPath,\n    currentQuery,\n    currentResponse,\n    queryLoading,\n    queryError,\n    sessionMessages,\n    followUpQuestions,\n    citations,\n    userLevel,\n    updateUserLevel,\n  } = useContext(LearningContext);\n  \n  const { user } = useContext(AuthContext);\n  const navigate = useNavigate();\n  \n  const [query, setQuery] = useState('');\n  const [selectedFollowUp, setSelectedFollowUp] = useState('');\n  const [expanded, setExpanded] = useState(false);\n  const [level, setLevel] = useState(userLevel || 'intermediate');\n  \n  const messageEndRef = useRef(null);\n  \n  // Scroll to bottom when messages change\n  useEffect(() => {\n    messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [sessionMessages]);\n  \n  // Update level when user changes it\n  useEffect(() => {\n    updateUserLevel(level);\n  }, [level, updateUserLevel]);\n  \n  const handleQuerySubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!query.trim()) {\n      toast.error('Please enter a question');\n      return;\n    }\n    \n    // Ask the question\n    await askQuestion(query, { level });\n    \n    // Clear the input\n    setQuery('');\n  };\n  \n  const handleFollowUpClick = async (followUp) => {\n    setSelectedFollowUp(followUp);\n    await askFollowUpQuestion(followUp);\n    setSelectedFollowUp('');\n  };\n  \n  const handleSaveContent = async () => {\n    if (!currentResponse) {\n      toast.error('No content to save');\n      return;\n    }\n    \n    const title = currentQuery.length > 50 \n      ? `${currentQuery.substring(0, 50)}...` \n      : currentQuery;\n    \n    const metadata = {\n      query: currentQuery,\n      citations,\n      level\n    };\n    \n    const contentId = await saveContent(title, currentResponse, 'note', metadata);\n    \n    if (contentId) {\n      toast.success('Content saved to your notes');\n    }\n  };\n  \n  const handleCreateLearningPath = async () => {\n    if (!currentQuery) {\n      toast.error('Please ask a question first');\n      return;\n    }\n    \n    // Extract main topic from query\n    const topic = currentQuery.split(' ').length > 3 \n      ? currentQuery.split(' ').slice(0, 3).join(' ') \n      : currentQuery;\n    \n    const pathData = await generateLearningPath(topic);\n    \n    if (pathData && pathData.pathId) {\n      navigate(`/learning-path/${pathData.pathId}`);\n    }\n  };\n  \n  const handleClearSession = () => {\n    clearSession();\n    toast.info('Learning session cleared');\n  };\n  \n  const handleLevelChange = (e) => {\n    setLevel(e.target.value);\n  };\n  \n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Grid container spacing={3}>\n        {/* Main content area */}\n        <Grid item xs={12} md={8}>\n          <Paper sx={{ p: 3, minHeight: '70vh', display: 'flex', flexDirection: 'column' }}>\n            {/* Chat header */}\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\n              <Typography variant=\"h5\" component=\"h1\" gutterBottom>\n                Learn Anything\n              </Typography>\n              <Box>\n                <FormControl variant=\"outlined\" size=\"small\" sx={{ minWidth: 150 }}>\n                  <InputLabel id=\"level-select-label\">Learning Level</InputLabel>\n                  <Select\n                    labelId=\"level-select-label\"\n                    id=\"level-select\"\n                    value={level}\n                    onChange={handleLevelChange}\n                    label=\"Learning Level\"\n                  >\n                    <MenuItem value=\"beginner\">Beginner</MenuItem>\n                    <MenuItem value=\"intermediate\">Intermediate</MenuItem>\n                    <MenuItem value=\"advanced\">Advanced</MenuItem>\n                  </Select>\n                </FormControl>\n                <IconButton \n                  color=\"primary\" \n                  onClick={handleClearSession}\n                  title=\"Clear Session\"\n                  sx={{ ml: 1 }}\n                >\n                  <RefreshIcon />\n                </IconButton>\n              </Box>\n            </Box>\n            \n            <Divider sx={{ mb: 2 }} />\n            \n            {/* Chat messages */}\n            <Box sx={{ flexGrow: 1, overflowY: 'auto', mb: 2 }}>\n              {sessionMessages.length === 0 ? (\n                <Box\n                  sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: '50vh',\n                    textAlign: 'center',\n                  }}\n                >\n                  <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n                    Ask any question to start learning\n                  </Typography>\n                  <Typography variant=\"body1\" color=\"text.secondary\">\n                    Get in-depth explanations with citations and follow-up questions\n                  </Typography>\n                </Box>\n              ) : (\n                sessionMessages.map((message, index) => (\n                  <Box\n                    key={index}\n                    sx={{\n                      mb: 2,\n                      p: 2,\n                      backgroundColor: message.role === 'user' \n                        ? 'rgba(25, 118, 210, 0.05)' \n                        : 'white',\n                      borderRadius: 2,\n                      maxWidth: '100%',\n                    }}\n                  >\n                    <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                      {message.role === 'user' ? 'You' : 'LearnSphere'}\n                    </Typography>\n                    \n                    {message.role === 'user' ? (\n                      <Typography variant=\"body1\">{message.content}</Typography>\n                    ) : (\n                      <Box>\n                        <ReactMarkdown\n                          remarkPlugins={[remarkGfm]}\n                          components={{\n                            code({ node, inline, className, children, ...props }) {\n                              const match = /language-(\\w+)/.exec(className || '');\n                              return !inline && match ? (\n                                <SyntaxHighlighter\n                                  style={atomDark}\n                                  language={match[1]}\n                                  PreTag=\"div\"\n                                  {...props}\n                                >\n                                  {String(children).replace(/\\n$/, '')}\n                                </SyntaxHighlighter>\n                              ) : (\n                                <code className={className} {...props}>\n                                  {children}\n                                </code>\n                              );\n                            },\n                          }}\n                        >\n                          {message.content}\n                        </ReactMarkdown>\n                      </Box>\n                    )}\n                  </Box>\n                ))\n              )}\n              <div ref={messageEndRef} />\n            </Box>\n            \n            {/* Input area */}\n            <Box component=\"form\" onSubmit={handleQuerySubmit}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                placeholder=\"Ask anything about any topic...\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                disabled={queryLoading}\n                InputProps={{\n                  endAdornment: (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      type=\"submit\"\n                      disabled={queryLoading || !query.trim()}\n                      sx={{ ml: 1 }}\n                    >\n                      {queryLoading ? <CircularProgress size={24} /> : <SendIcon />}\n                    </Button>\n                  ),\n                }}\n              />\n            </Box>\n          </Paper>\n        </Grid>\n        \n        {/* Sidebar */}\n        <Grid item xs={12} md={4}>\n          {/* Follow-up questions */}\n          <Paper sx={{ p: 2, mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Follow-up Questions\n            </Typography>\n            <Divider sx={{ mb: 2 }} />\n            \n            {followUpQuestions && followUpQuestions.length > 0 ? (\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                {followUpQuestions.map((followUp, index) => (\n                  <Button\n                    key={index}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={() => handleFollowUpClick(followUp)}\n                    disabled={queryLoading || selectedFollowUp === followUp}\n                    sx={{ justifyContent: 'flex-start', textTransform: 'none' }}\n                  >\n                    {followUp}\n                  </Button>\n                ))}\n              </Box>\n            ) : (\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {currentResponse \n                  ? 'No follow-up questions available' \n                  : 'Ask a question to see follow-up suggestions'}\n              </Typography>\n            )}\n          </Paper>\n          \n          {/* Action buttons */}\n          <Paper sx={{ p: 2, mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Actions\n            </Typography>\n            <Divider sx={{ mb: 2 }} />\n            \n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              fullWidth\n              startIcon={<BookmarkIcon />}\n              onClick={handleSaveContent}\n              disabled={!currentResponse}\n              sx={{ mb: 2 }}\n            >\n              Save to Notes\n            </Button>\n            \n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              fullWidth\n              startIcon={<PathIcon />}\n              onClick={handleCreateLearningPath}\n              disabled={!currentQuery}\n            >\n              Create Learning Path\n            </Button>\n          </Paper>\n          \n          {/* Citations */}\n          {citations && citations.length > 0 && (\n            <Paper sx={{ p: 2 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Sources & Citations\n              </Typography>\n              <Divider sx={{ mb: 2 }} />\n              \n              <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                  <Typography>\n                    {citations.length} {citations.length === 1 ? 'Source' : 'Sources'}\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                    {citations.map((citation, index) => (\n                      <Card key={index} variant=\"outlined\">\n                        <CardContent sx={{ py: 1, '&:last-child': { pb: 1 } }}>\n                          <Typography variant=\"subtitle2\">\n                            {citation.title || 'Unknown Source'}\n                          </Typography>\n                          \n                          {citation.snippet && (\n                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                              {citation.snippet.length > 150 \n                                ? `${citation.snippet.substring(0, 150)}...` \n                                : citation.snippet}\n                            </Typography>\n                          )}\n                          \n                          {citation.url && (\n                            <Link \n                              href={citation.url} \n                              target=\"_blank\" \n                              rel=\"noopener noreferrer\"\n                              sx={{ \n                                display: 'flex', \n                                alignItems: 'center',\n                                mt: 1,\n                                fontSize: '0.875rem'\n                              }}\n                            >\n                              <LinkIcon fontSize=\"small\" sx={{ mr: 0.5 }} />\n                              Visit Source\n                            </Link>\n                          )}\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </Box>\n                </AccordionDetails>\n              </Accordion>\n            </Paper>\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Learn;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1M8 13h8v-2H8zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5\"\n}), 'Link');"],"names":["createSvgIcon","_jsx","d","Learn","askQuestion","askFollowUpQuestion","clearSession","saveContent","generateLearningPath","currentQuery","currentResponse","queryLoading","queryError","sessionMessages","followUpQuestions","citations","userLevel","updateUserLevel","useContext","LearningContext","user","AuthContext","navigate","useNavigate","query","setQuery","useState","selectedFollowUp","setSelectedFollowUp","expanded","setExpanded","level","setLevel","messageEndRef","useRef","useEffect","_messageEndRef$curren","current","scrollIntoView","behavior","Container","maxWidth","sx","mt","mb","children","_jsxs","Grid","container","spacing","item","xs","md","Paper","p","minHeight","display","flexDirection","Box","justifyContent","Typography","variant","component","gutterBottom","FormControl","size","minWidth","InputLabel","id","Select","labelId","value","onChange","e","target","label","MenuItem","IconButton","color","onClick","handleClearSession","toast","info","title","ml","RefreshIcon","Divider","flexGrow","overflowY","length","alignItems","height","textAlign","map","message","index","backgroundColor","role","borderRadius","content","ReactMarkdown","remarkPlugins","remarkGfm","components","code","_ref","node","inline","className","props","match","exec","SyntaxHighlighter","style","atomDark","language","PreTag","String","replace","ref","onSubmit","async","preventDefault","trim","error","TextField","fullWidth","placeholder","disabled","InputProps","endAdornment","Button","type","CircularProgress","SendIcon","gap","followUp","handleFollowUpClick","textTransform","startIcon","BookmarkIcon","substring","metadata","success","PathIcon","topic","split","slice","join","pathData","pathId","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","citation","Card","CardContent","py","pb","snippet","url","Link","href","rel","fontSize","LinkIcon","mr"],"sourceRoot":""}