{"version":3,"file":"static/js/723.55552aee.chunk.js","mappings":"0nBA4DA,SAASA,EAASC,GAChB,MAAM,SAAEC,EAAQ,MAAEC,EAAK,MAAEC,KAAUC,GAAUJ,EAE7C,OACEK,EAAAA,EAAAA,KAAA,OACEC,KAAK,WACLC,OAAQL,IAAUC,EAClBK,GAAI,sBAAsBL,IAC1B,kBAAiB,iBAAiBA,OAC9BC,EAAKH,SAERC,IAAUC,IACTE,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAI,CAAEC,EAAG,GAAIV,SACfA,KAKX,CAEA,MA2sBMW,EAAkBC,IACtB,OAAQA,GACN,IAAK,mBACH,MAAO,kBACT,IAAK,SAEL,IAAK,kBACH,MAAO,SACT,IAAK,iBACH,MAAO,iBACT,IAAK,QACH,MAAO,WACT,IAAK,YACH,MAAO,WACT,QACE,MAAO,aACX,EAGF,EA9tBkBC,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EACtB,MAAMC,GAAQC,EAAAA,EAAAA,MACR,KAAEC,IAASC,EAAAA,EAAAA,YAAWC,EAAAA,IACtB,iBACJC,EAAgB,aAChBC,EAAY,gBACZC,GAAe,QACfC,GAAO,MACPC,GAAK,sBACLC,GAAqB,kBACrBC,GAAiB,qBACjBC,GAAoB,qBACpBC,GAAoB,cACpBC,GAAa,mBACbC,GAAkB,aAClBC,GAAY,uBACZC,GAAsB,iBACtBC,GAAgB,yBAChBC,KACEhB,EAAAA,EAAAA,YAAWiB,EAAAA,IAERC,GAAUC,KAAeC,EAAAA,EAAAA,UAAS,IAClCC,GAAcC,KAAmBF,EAAAA,EAAAA,UAAS,KAEjDG,EAAAA,EAAAA,YAAU,KAERZ,GAAc,aAGdJ,KACAC,KACAC,KAGAe,IAA4B,GAC3B,IAEH,MAKMA,GAA6BA,KAEjC,MAAMC,EAAgB,GAChBC,EAAM,IAAIC,KAEhB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,MAAMC,EAAO,IAAIF,KACjBE,EAAKC,QAAQJ,EAAIK,UAAYH,GAE7BH,EAAcO,KAAK,CACjBH,KAAMA,EAAKI,mBAAmB,QAAS,CAAEC,QAAS,UAClDC,SAAUC,KAAKC,MAAsB,EAAhBD,KAAKE,UAC1BC,UAAWH,KAAKC,MAAsB,GAAhBD,KAAKE,UAC3BE,QAASJ,KAAKC,MAAsB,EAAhBD,KAAKE,WAE7B,CAEAhB,GAAgBG,EAAc,EAsB1BgB,GAAS,CACb5C,EAAM6C,QAAQC,QAAQC,KACtB/C,EAAM6C,QAAQG,UAAUD,KACxB/C,EAAM6C,QAAQI,QAAQF,KACtB/C,EAAM6C,QAAQK,QAAQH,KACtB/C,EAAM6C,QAAQpC,MAAMsC,KACpB/C,EAAM6C,QAAQM,KAAKJ,MAGrB,OAAIvC,IAEAtB,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAI,CAAE6D,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,UAAW,QAASzE,UAC9FI,EAAAA,EAAAA,KAACsE,EAAAA,EAAgB,MAKnB/C,IAEAgD,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAKpE,GAAI,CAAEqE,GAAI,EAAGC,GAAI,GAAI/E,SAAA,EAC5CI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAAAnF,SAAC,wBAGrDI,EAAAA,EAAAA,KAACgF,EAAAA,EAAK,CAAC3E,GAAI,CAAEC,EAAG,EAAG2E,UAAW,UAAWrF,UACvCI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACM,MAAM,QAAQL,QAAQ,QAAOjF,SACtC2B,WAQTgD,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAKpE,GAAI,CAAEqE,GAAI,EAAGC,GAAI,GAAI/E,SAAA,EAC5CI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAAAnF,SAAC,mCAIrD2E,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CAAC3E,GAAI,CAAEsE,GAAI,GAAI/E,SAAA,EACnB2E,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CACHtF,MAAOsC,GACPiD,SArFgBC,CAACC,EAAOC,KAC9BnD,GAAYmD,EAAS,EAqFfV,QAAQ,YACRW,eAAe,UACfC,UAAU,UAAS7F,SAAA,EAEnBI,EAAAA,EAAAA,KAAC0F,EAAAA,EAAG,CAACC,MAAM3F,EAAAA,EAAAA,KAAC4F,EAAAA,EAAc,IAAKC,MAAM,cACrC7F,EAAAA,EAAAA,KAAC0F,EAAAA,EAAG,CAACC,MAAM3F,EAAAA,EAAAA,KAAC8F,EAAAA,EAAa,IAAKD,MAAM,cACpC7F,EAAAA,EAAAA,KAAC0F,EAAAA,EAAG,CAACC,MAAM3F,EAAAA,EAAAA,KAAC+F,EAAAA,EAAa,IAAKF,MAAM,qBACpC7F,EAAAA,EAAAA,KAAC0F,EAAAA,EAAG,CAACC,MAAM3F,EAAAA,EAAAA,KAACgG,EAAAA,EAAY,IAAKH,MAAM,iBAIrCtB,EAAAA,EAAAA,MAAC7E,EAAQ,CAACG,MAAOsC,GAAUrC,MAAO,EAAEF,SAAA,EAClCI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAnF,SAAC,uBAItC2E,EAAAA,EAAAA,MAAC0B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvG,SAAA,EAEzBI,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAE1G,UACvB2E,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CAAC3E,GAAI,CAAEC,EAAG,EAAGiG,OAAQ,QAAS3G,SAAA,EAClCI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAnF,SAAC,qBAItCI,EAAAA,EAAAA,KAACwG,EAAAA,EAAmB,CAACC,MAAM,OAAOF,OAAQ,IAAI3G,UAC5C2E,EAAAA,EAAAA,MAACmC,EAAAA,EAAQ,CACPC,KAAMrE,GACNsE,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,GAAIpH,SAAA,EAEpDI,EAAAA,EAAAA,KAACiH,EAAAA,EAAa,CAACC,gBAAgB,SAC/BlH,EAAAA,EAAAA,KAACmH,EAAAA,EAAK,CAACC,QAAQ,UACfpH,EAAAA,EAAAA,KAACqH,EAAAA,EAAK,KACNrH,EAAAA,EAAAA,KAACsH,EAAAA,EAAO,KACRtH,EAAAA,EAAAA,KAACuH,EAAAA,EAAM,KACPvH,EAAAA,EAAAA,KAACwH,EAAAA,EAAG,CAACJ,QAAQ,WAAWK,KAAK,oBAAoBC,KAAM5G,EAAM6C,QAAQC,QAAQC,QAC7E7D,EAAAA,EAAAA,KAACwH,EAAAA,EAAG,CAACJ,QAAQ,YAAYK,KAAK,kBAAkBC,KAAM5G,EAAM6C,QAAQG,UAAUD,QAC9E7D,EAAAA,EAAAA,KAACwH,EAAAA,EAAG,CAACJ,QAAQ,UAAUK,KAAK,kBAAkBC,KAAM5G,EAAM6C,QAAQI,QAAQF,kBAOlF7D,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAE1G,UACvB2E,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CAAC3E,GAAI,CAAEC,EAAG,EAAGiG,OAAQ,QAAS3G,SAAA,EAClCI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAnF,SAAC,yBAItC2E,EAAAA,EAAAA,MAACnE,EAAAA,EAAG,CAACC,GAAI,CAAE6D,QAAS,OAAQyD,cAAe,SAAUvD,WAAY,SAAUM,GAAI,GAAI9E,SAAA,EACjFI,EAAAA,EAAAA,KAAC4H,EAAAA,EAAQ,CAACnB,MAAO,IAAKF,OAAQ,IAAI3G,UAChCI,EAAAA,EAAAA,KAAC6H,EAAAA,EAAG,CACFlB,KAAM,CACJ,CAAEc,KAAM,SAAU5H,MAAuC,YAApB,OAAZuB,QAAY,IAAZA,OAAY,EAAZA,EAAc0G,eAA6B,IAAM,IAC1E,CAAEL,KAAM,UAAW5H,MAAuC,aAApB,OAAZuB,QAAY,IAAZA,OAAY,EAAZA,EAAc0G,eAA8B,IAAM,IAC5E,CAAEL,KAAM,cAAe5H,MAAuC,iBAApB,OAAZuB,QAAY,IAAZA,OAAY,EAAZA,EAAc0G,eAAkC,IAAM,IACpF,CAAEL,KAAM,aAAc5H,MAAuC,gBAApB,OAAZuB,QAAY,IAAZA,OAAY,EAAZA,EAAc0G,eAAiC,IAAM,KAEpFC,GAAG,MACHC,GAAG,MACHC,YAAa,GACbC,YAAa,GACbC,aAAc,EACdf,QAAQ,QAAOxH,SAEd,CAAC,EAAG,EAAG,EAAG,GAAGwI,KAAI,CAACC,EAAOvI,KACxBE,EAAAA,EAAAA,KAACsI,EAAAA,EAAI,CAAuBZ,KAAMhE,GAAO5D,EAAQ4D,GAAO6E,SAA7C,QAAQzI,YAKzBE,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKxE,GAAI,CAAEqE,GAAI,EAAG8D,cAAe,cAAe5I,SACjEoC,MAAsB,gBAGzBhC,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAiB7E,GAAI,CAAEqE,GAAI,EAAGO,UAAW,UAAWrF,SAvIjE6I,KACnC,OAAQA,GACN,IAAK,SACH,MAAO,wEACT,IAAK,WACH,MAAO,6DACT,IAAK,UACH,MAAO,iEACT,IAAK,cACH,MAAO,wEACT,IAAK,aACH,MAAO,6EACT,QACE,MAAO,sEACX,EA0HiBC,CAA4B1G,iBAOrChC,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGzG,UAChB2E,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CAAC3E,GAAI,CAAEC,EAAG,GAAIV,SAAA,EAClBI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAnF,SAAC,oBAItCI,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvG,SACxBuB,GAAoBA,EAAiBoH,OAAS,EAC7CpH,EAAiBiH,KAAKO,IACpB3I,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuC,GAAI,EAAGtC,GAAI,EAAE1G,UAC9BI,EAAAA,EAAAA,KAAC6I,EAAAA,EAAI,CAAChE,QAAQ,WAAUjF,UACtB2E,EAAAA,EAAAA,MAACuE,EAAAA,EAAW,CAAAlJ,SAAA,EACVI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,YAAYE,cAAY,EAAAnF,SACzC+I,EAASI,SAGZxE,EAAAA,EAAAA,MAACnE,EAAAA,EAAG,CAACC,GAAI,CAAE6D,QAAS,OAAQE,WAAY,SAAUO,GAAI,GAAI/E,SAAA,EACxDI,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAI,CAAEoG,MAAO,OAAQuC,GAAI,GAAIpJ,UAChCI,EAAAA,EAAAA,KAACiJ,EAAAA,EAAc,CACbpE,QAAQ,cACRhF,MAAO8I,EAASO,gBAChBhE,MAAOyD,EAASO,gBAAkB,GAAK,UAAY,UACnD7I,GAAI,CAAEkG,OAAQ,GAAI4C,aAAc,QAGpCnJ,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAI,CAAE+I,SAAU,IAAKxJ,UACxB2E,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAgBtF,SAAA,CAC/C+I,EAASO,gBAAgB,aAKhC3E,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACC,QAAQ,UAAUK,MAAM,iBAAgBtF,SAAA,CAAC,eACtCyD,KAAKgG,MAAMV,EAASW,UAAY,IAAI,oBAxBnBX,EAASY,QA+BjDvJ,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGzG,UAChBI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAiB7E,GAAI,CAAE4E,UAAW,SAAU3E,EAAG,GAAIV,SAAC,+FAYpG2E,EAAAA,EAAAA,MAAC7E,EAAQ,CAACG,MAAOsC,GAAUrC,MAAO,EAAEF,SAAA,EAClCI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAnF,SAAC,uBAItC2E,EAAAA,EAAAA,MAAC0B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvG,SAAA,EAEzBI,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAE1G,UACvB2E,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CAAC3E,GAAI,CAAEC,EAAG,EAAGiG,OAAQ,QAAS3G,SAAA,EAClC2E,EAAAA,EAAAA,MAACnE,EAAAA,EAAG,CAACC,GAAI,CAAE6D,QAAS,OAAQE,WAAY,SAAUO,GAAI,GAAI/E,SAAA,EACxDI,EAAAA,EAAAA,KAACwJ,EAAAA,EAAQ,CAACtE,MAAM,UAAU7E,GAAI,CAAE2I,GAAI,MACpChJ,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAIjF,SAAC,8BAK3BI,EAAAA,EAAAA,KAACyJ,EAAAA,EAAI,CAAA7J,SACFiC,GAAmB,GAAG0G,OAAS,EAC9B1G,GAAmB,GAAGuG,KAAI,CAACW,EAAOjJ,KAChCyE,EAAAA,EAAAA,MAACmF,EAAAA,GAAQ,CAAA9J,SAAA,EACPI,EAAAA,EAAAA,KAAC2J,EAAAA,EAAY,CAAA/J,UACXI,EAAAA,EAAAA,KAAC4J,EAAAA,EAAU,CAAC1E,MAAOpF,EAAQ,EAAI,UAAY,cAE7CE,EAAAA,EAAAA,KAAC6J,EAAAA,EAAY,CACXjG,QAASmF,EAAMA,MACfjF,UAAW,mBAAmBiF,EAAMe,YAEtC9J,EAAAA,EAAAA,KAACiJ,EAAAA,EAAc,CACbpE,QAAQ,cACRhF,MAAOkJ,EAAMe,MACbzJ,GAAI,CAAEoG,MAAO,IAAKF,OAAQ,EAAG4C,aAAc,OAXhCrJ,MAgBjBE,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAiB7E,GAAI,CAAEC,EAAG,GAAIV,SAAC,iEASzEI,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAE1G,UACvB2E,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CAAC3E,GAAI,CAAEC,EAAG,EAAGiG,OAAQ,QAAS3G,SAAA,EAClC2E,EAAAA,EAAAA,MAACnE,EAAAA,EAAG,CAACC,GAAI,CAAE6D,QAAS,OAAQE,WAAY,SAAUO,GAAI,GAAI/E,SAAA,EACxDI,EAAAA,EAAAA,KAAC4F,EAAAA,EAAc,CAACV,MAAM,UAAU7E,GAAI,CAAE2I,GAAI,MAC1ChJ,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAIjF,SAAC,0CAK3BI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,YAAYK,MAAM,eAAe7E,GAAI,CAAEqE,GAAI,EAAGC,GAAI,GAAI/E,SAAC,oBAI3EI,EAAAA,EAAAA,KAACyJ,EAAAA,EAAI,CAACM,OAAK,EAAAnK,SACRkC,GAAa,GAAGyG,OAAS,EACxBzG,GAAa,GAAGsG,KAAI,CAAC4B,EAAUlK,KAC7ByE,EAAAA,EAAAA,MAACmF,EAAAA,GAAQ,CAAA9J,SAAA,EACPI,EAAAA,EAAAA,KAAC2J,EAAAA,EAAY,CAAA/J,UACXI,EAAAA,EAAAA,KAACiK,EAAAA,EAAW,CAAC/E,MAAM,eAErBlF,EAAAA,EAAAA,KAAC6J,EAAAA,EAAY,CACXjG,QAASoG,EAASjB,MAClBjF,UAAW,gBAAgBkG,EAASF,aANzBhK,MAWjBE,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAiB7E,GAAI,CAAE6J,GAAI,GAAItK,SAAC,iDAMtEI,EAAAA,EAAAA,KAACmK,EAAAA,EAAO,CAAC9J,GAAI,CAAE+J,GAAI,MAEnBpK,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,YAAYK,MAAM,aAAa7E,GAAI,CAAEqE,GAAI,EAAGC,GAAI,GAAI/E,SAAC,2BAIzEI,EAAAA,EAAAA,KAACyJ,EAAAA,EAAI,CAACM,OAAK,EAAAnK,SACRmC,GAAuB,GAAGwG,OAAS,EAClCxG,GAAuB,GAAGqG,KAAI,CAACiC,EAAMvK,KACnCyE,EAAAA,EAAAA,MAACmF,EAAAA,GAAQ,CAAA9J,SAAA,EACPI,EAAAA,EAAAA,KAAC2J,EAAAA,EAAY,CAAA/J,UACXI,EAAAA,EAAAA,KAACsK,EAAAA,EAAa,CAACpF,MAAM,aAEvBlF,EAAAA,EAAAA,KAAC6J,EAAAA,EAAY,CACXjG,QAASyG,EAAKtB,MACdjF,UAAW,kBAAkB,IAAMuG,EAAKP,aAN7BhK,MAWjBE,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAiB7E,GAAI,CAAE6J,GAAI,GAAItK,SAAC,iEAS1EI,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGzG,UAChB2E,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CAAC3E,GAAI,CAAEC,EAAG,GAAIV,SAAA,EAClBI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAnF,SAAC,uBAItC2E,EAAAA,EAAAA,MAAC0B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvG,SAAA,EACzBI,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuC,GAAI,EAAGtC,GAAI,EAAE1G,UAC9BI,EAAAA,EAAAA,KAAC6I,EAAAA,EAAI,CAAChE,QAAQ,WAAWxE,GAAI,CAAEkG,OAAQ,QAAS3G,UAC9C2E,EAAAA,EAAAA,MAACuE,EAAAA,EAAW,CAAAlJ,SAAA,EACVI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,YAAYK,MAAM,iBAAiBH,cAAY,EAAAnF,SAAC,oBAGpEI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKxE,GAAI,CAAEmI,cAAe,cAAe5I,UAC9C,OAAZwB,QAAY,IAAZA,GAA8B,QAAlBV,EAAZU,EAAcmJ,wBAAgB,IAAA7J,OAAlB,EAAZA,EAAgC8J,qBAAsB,mBAM/DxK,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuC,GAAI,EAAGtC,GAAI,EAAE1G,UAC9BI,EAAAA,EAAAA,KAAC6I,EAAAA,EAAI,CAAChE,QAAQ,WAAWxE,GAAI,CAAEkG,OAAQ,QAAS3G,UAC9C2E,EAAAA,EAAAA,MAACuE,EAAAA,EAAW,CAAAlJ,SAAA,EACVI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,YAAYK,MAAM,iBAAiBH,cAAY,EAAAnF,SAAC,2BAGpE2E,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACC,QAAQ,KAAIjF,SAAA,CACT,OAAZwB,QAAY,IAAZA,GAA8B,QAAlBT,EAAZS,EAAcmJ,wBAAgB,IAAA5J,GAA9BA,EAAgC8J,uBAC7BpH,KAAKgG,MAAMjI,EAAamJ,iBAAiBE,uBAAyB,IAClE,EAAE,kBAMdzK,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuC,GAAI,EAAGtC,GAAI,EAAE1G,UAC9BI,EAAAA,EAAAA,KAAC6I,EAAAA,EAAI,CAAChE,QAAQ,WAAWxE,GAAI,CAAEkG,OAAQ,QAAS3G,UAC9C2E,EAAAA,EAAAA,MAACuE,EAAAA,EAAW,CAAAlJ,SAAA,EACVI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,YAAYK,MAAM,iBAAiBH,cAAY,EAAAnF,SAAC,uBAGpEI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAIjF,UACT,OAAZwB,QAAY,IAAZA,GAA8B,QAAlBR,EAAZQ,EAAcmJ,wBAAgB,IAAA3J,OAAlB,EAAZA,EAAgC8J,kBAAmB,YAM5D1K,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuC,GAAI,EAAGtC,GAAI,EAAE1G,UAC9BI,EAAAA,EAAAA,KAAC6I,EAAAA,EAAI,CAAChE,QAAQ,WAAWxE,GAAI,CAAEkG,OAAQ,QAAS3G,UAC9C2E,EAAAA,EAAAA,MAACuE,EAAAA,EAAW,CAAAlJ,SAAA,EACVI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,YAAYK,MAAM,iBAAiBH,cAAY,EAAAnF,SAAC,uBAGpE2E,EAAAA,EAAAA,MAACnE,EAAAA,EAAG,CAACC,GAAI,CAAE6D,QAAS,OAAQE,WAAY,UAAWxE,SAAA,EACjDI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAIjF,UACT,OAAZwB,QAAY,IAAZA,GAA8B,QAAlBP,EAAZO,EAAcmJ,wBAAgB,IAAA1J,OAAlB,EAAZA,EAAgC8J,mBAAoB,KAEvD3K,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAiB7E,GAAI,CAAEuK,GAAI,GAAIhL,SAAC,kCAcpF2E,EAAAA,EAAAA,MAAC7E,EAAQ,CAACG,MAAOsC,GAAUrC,MAAO,EAAEF,SAAA,EAClCI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAnF,SAAC,kCAItC2E,EAAAA,EAAAA,MAAC0B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvG,SAAA,EAEzBI,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAE1G,UACvB2E,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CAAC3E,GAAI,CAAEC,EAAG,EAAGiG,OAAQ,QAAS3G,SAAA,EAClC2E,EAAAA,EAAAA,MAACnE,EAAAA,EAAG,CAACC,GAAI,CAAE6D,QAAS,OAAQE,WAAY,SAAUO,GAAI,GAAI/E,SAAA,EACxDI,EAAAA,EAAAA,KAAC6K,EAAAA,EAAc,CAAC3F,MAAM,UAAU7E,GAAI,CAAE2I,GAAI,MAC1ChJ,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAIjF,SAAC,4BAK3BI,EAAAA,EAAAA,KAACyJ,EAAAA,EAAI,CAAA7J,SACFqC,GAAyB,UAAW,GAAGsG,OAAS,EAC/CtG,GAAyB,UAAW,GAAGmG,KAAI,CAAC0C,EAAKhL,KAAK,IAAAiL,EAAA,OACpD/K,EAAAA,EAAAA,KAAC0J,EAAAA,GAAQ,CAAatF,WAAW,aAAYxE,UAC3CI,EAAAA,EAAAA,KAAC6J,EAAAA,EAAY,CACXjG,SACE5D,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,YAAYC,UAAWkG,EAAAA,GAAYC,GAAI,YAAYH,EAAI1E,OAAQ/F,GAAI,CAAE6K,eAAgB,QAAStL,UACpG,QAAXmL,EAAAD,EAAIrH,eAAO,IAAAsH,OAAA,EAAXA,EAAaI,QAAS,WAAWrL,EAAQ,MAG9CgE,WACES,EAAAA,EAAAA,MAAA6G,EAAAA,SAAA,CAAAxL,SAAA,EACEI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAiBJ,UAAU,OAAMlF,SAChEkL,EAAIO,UAEPrL,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAI,CAAEqE,GAAI,GAAI9E,UACjBI,EAAAA,EAAAA,KAACsL,EAAAA,EAAI,CACHC,KAAK,QACL1F,MAAO,cAAciF,EAAIhB,SACzB5E,MAAM,UACNL,QAAQ,qBAjBL/E,EAuBJ,KAGbE,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAiB7E,GAAI,CAAEC,EAAG,GAAIV,SAAC,yGASzEI,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAE1G,UACvB2E,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CAAC3E,GAAI,CAAEC,EAAG,EAAGiG,OAAQ,QAAS3G,SAAA,EAClC2E,EAAAA,EAAAA,MAACnE,EAAAA,EAAG,CAACC,GAAI,CAAE6D,QAAS,OAAQE,WAAY,SAAUO,GAAI,GAAI/E,SAAA,EACxDI,EAAAA,EAAAA,KAAC4J,EAAAA,EAAU,CAAC1E,MAAM,YAAY7E,GAAI,CAAE2I,GAAI,MACxChJ,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAIjF,SAAC,2BAK3BI,EAAAA,EAAAA,KAACyJ,EAAAA,EAAI,CAAA7J,SACFqC,GAAyB,QAAS,GAAGsG,OAAS,EAC7CtG,GAAyB,QAAS,GAAGmG,KAAI,CAAC0C,EAAKhL,KAC7CyE,EAAAA,EAAAA,MAACmF,EAAAA,GAAQ,CAAA9J,SAAA,EACPI,EAAAA,EAAAA,KAAC6J,EAAAA,EAAY,CACXjG,QAASkH,EAAI1E,KACbtC,UAAWgH,EAAIO,UAEjBrL,EAAAA,EAAAA,KAACwL,EAAAA,EAAM,CACL3G,QAAQ,WACR0G,KAAK,QACLzG,UAAWkG,EAAAA,GACXC,GAAI,gBAAgBQ,mBAAmBX,EAAI1E,QAAQxG,SACpD,cAVYE,MAgBjBE,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAiB7E,GAAI,CAAEC,EAAG,GAAIV,SAAC,uGASzEI,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGzG,UAChB2E,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CAAC3E,GAAI,CAAEC,EAAG,GAAIV,SAAA,EAClB2E,EAAAA,EAAAA,MAACnE,EAAAA,EAAG,CAACC,GAAI,CAAE6D,QAAS,OAAQE,WAAY,SAAUO,GAAI,GAAI/E,SAAA,EACxDI,EAAAA,EAAAA,KAAC8F,EAAAA,EAAa,CAACZ,MAAM,UAAU7E,GAAI,CAAE2I,GAAI,MACzChJ,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAIjF,SAAC,oCAK3BI,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvG,SACxBqC,GAAyB,UAAW,GAAGsG,OAAS,EAC/CtG,GAAyB,UAAW,GAAGmG,KAAI,CAAC0C,EAAKhL,KAC/CE,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuC,GAAI,EAAGtC,GAAI,EAAE1G,UAC9BI,EAAAA,EAAAA,KAAC6I,EAAAA,EAAI,CAAChE,QAAQ,WAAUjF,UACtB2E,EAAAA,EAAAA,MAACuE,EAAAA,EAAW,CAAAlJ,SAAA,EACVI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,YAAYxE,GAAI,CAAEmI,cAAe,cAAe5I,SACjEkL,EAAI1E,KAAKsF,QAAQ,IAAK,QAEzB1L,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAiB7E,GAAI,CAAEsE,GAAI,GAAI/E,SAC9DkL,EAAIO,UAEPrL,EAAAA,EAAAA,KAACwL,EAAAA,EAAM,CACL3G,QAAQ,YACR0G,KAAK,QACLrG,MAAM,UACNJ,UAAWkG,EAAAA,GACXC,GAAI1K,EAAeuK,EAAI1E,MAAMxG,SAC9B,kBAf+BE,MAuBxCE,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGzG,UAChBI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAiB7E,GAAI,CAAE4E,UAAW,SAAU3E,EAAG,GAAIV,SAAC,2HAYpG2E,EAAAA,EAAAA,MAAC7E,EAAQ,CAACG,MAAOsC,GAAUrC,MAAO,EAAEF,SAAA,EAClCI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAnF,SAAC,uBAItC2E,EAAAA,EAAAA,MAAC0B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvG,SAAA,EAEzBI,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGzG,UAChB2E,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CAAC3E,GAAI,CAAEC,EAAG,GAAIV,SAAA,EAClBI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAnF,SAAC,sBAIrCuB,GAAoBA,EAAiBoH,OAAS,GAC7CvI,EAAAA,EAAAA,KAACwG,EAAAA,EAAmB,CAACC,MAAM,OAAOF,OAAQ,IAAI3G,UAC5C2E,EAAAA,EAAAA,MAACmC,EAAAA,EAAQ,CACPC,KAAMxF,EAAiBiH,KAAI9H,IAAC,CAC1ByI,MAAOzI,EAAEyI,MACTJ,SAAUrI,EAAE4I,gBACZI,UAAWjG,KAAKgG,MAAM/I,EAAEgJ,UAAY,QAEtC1C,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,GAAIpH,SAAA,EAEpDI,EAAAA,EAAAA,KAACiH,EAAAA,EAAa,CAACC,gBAAgB,SAC/BlH,EAAAA,EAAAA,KAACmH,EAAAA,EAAK,CAACC,QAAQ,WACfpH,EAAAA,EAAAA,KAACqH,EAAAA,EAAK,CAACsE,QAAQ,OAAOC,YAAY,OAAOC,OAAQ/K,EAAM6C,QAAQC,QAAQC,QACvE7D,EAAAA,EAAAA,KAACqH,EAAAA,EAAK,CAACsE,QAAQ,QAAQC,YAAY,QAAQC,OAAQ/K,EAAM6C,QAAQG,UAAUD,QAC3E7D,EAAAA,EAAAA,KAACsH,EAAAA,EAAO,KACRtH,EAAAA,EAAAA,KAACuH,EAAAA,EAAM,KACPvH,EAAAA,EAAAA,KAACwH,EAAAA,EAAG,CAACmE,QAAQ,OAAOvE,QAAQ,WAAWK,KAAK,eAAeC,KAAM5G,EAAM6C,QAAQC,QAAQC,QACvF7D,EAAAA,EAAAA,KAACwH,EAAAA,EAAG,CAACmE,QAAQ,QAAQvE,QAAQ,YAAYK,KAAK,mBAAmBC,KAAM5G,EAAM6C,QAAQG,UAAUD,aAInG7D,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAiB7E,GAAI,CAAE4E,UAAW,SAAU3E,EAAG,GAAIV,SAAC,+EAQ5FI,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGzG,UAChB2E,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CAAC3E,GAAI,CAAEC,EAAG,GAAIV,SAAA,EAClBI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAnF,SAAC,4BAIrCuB,GAAoBA,EAAiBoH,OAAS,GAC7CvI,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvG,SACxBuB,EAAiBiH,KAAKO,IACrB3I,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGzG,UAChBI,EAAAA,EAAAA,KAAC6I,EAAAA,EAAI,CAAChE,QAAQ,WAAUjF,UACtB2E,EAAAA,EAAAA,MAACuE,EAAAA,EAAW,CAAAlJ,SAAA,EACVI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAnF,SAClC+I,EAASI,SAGZxE,EAAAA,EAAAA,MAACnE,EAAAA,EAAG,CAACC,GAAI,CAAE6D,QAAS,OAAQE,WAAY,SAAUO,GAAI,GAAI/E,SAAA,EACxDI,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAI,CAAEoG,MAAO,OAAQuC,GAAI,GAAIpJ,UAChCI,EAAAA,EAAAA,KAACiJ,EAAAA,EAAc,CACbpE,QAAQ,cACRhF,MAAO8I,EAASO,gBAChBhE,MAAOyD,EAASO,gBAAkB,GAAK,UAAY,UACnD7I,GAAI,CAAEkG,OAAQ,GAAI4C,aAAc,QAGpCnJ,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAI,CAAE+I,SAAU,IAAKxJ,UACxB2E,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAgBtF,SAAA,CAC/C+I,EAASO,gBAAgB,aAKhClJ,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,YAAYE,cAAY,EAAAnF,SAAC,eAI5C+I,EAASmD,WAAanD,EAASmD,UAAUvD,OAAS,GACjDvI,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvG,SACxB+I,EAASmD,UAAU1D,KAAI,CAAC2D,EAAUjM,KACjCE,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuC,GAAI,EAAGtC,GAAI,EAAE1G,UAC9B2E,EAAAA,EAAAA,MAACnE,EAAAA,EAAG,CAACC,GAAI,CAAEsE,GAAI,GAAI/E,SAAA,EACjBI,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAOjF,SACxBmM,EAAStE,QAEZlD,EAAAA,EAAAA,MAACnE,EAAAA,EAAG,CAACC,GAAI,CAAE6D,QAAS,OAAQE,WAAY,UAAWxE,SAAA,EACjDI,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAI,CAAEoG,MAAO,OAAQuC,GAAI,GAAIpJ,UAChCI,EAAAA,EAAAA,KAACiJ,EAAAA,EAAc,CACbpE,QAAQ,cACRhF,MAAOkM,EAASpD,SAChBtI,GAAI,CAAEkG,OAAQ,EAAG4C,aAAc,QAGnCnJ,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAI,CAAE+I,SAAU,IAAKxJ,UACxB2E,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACC,QAAQ,UAAUK,MAAM,iBAAgBtF,SAAA,CACjDmM,EAASpD,SAAS,gBAfS7I,QAwB1CE,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAgBtF,SAAC,4CAKrD2E,EAAAA,EAAAA,MAACnE,EAAAA,EAAG,CAACC,GAAI,CAAEqE,GAAI,EAAGR,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,UAAWxE,SAAA,EACzF2E,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAgBtF,SAAA,CAAC,eACpCyD,KAAKgG,MAAMV,EAASW,UAAY,IAAI,eAGnD/E,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAgBtF,SAAA,CAAC,kBACjC,IAAIgD,KAAK+F,EAASqD,cAAc9I,iCAjElCyF,EAASY,UA0ErCvJ,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAiB7E,GAAI,CAAE4E,UAAW,SAAU3E,EAAG,GAAIV,SAAC,kGASxF,C","sources":["pages/Analytics.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Grid,\n  Paper,\n  Tabs,\n  Tab,\n  CircularProgress,\n  Divider,\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Chip,\n  Button,\n  LinearProgress,\n  useTheme\n} from '@mui/material';\nimport {\n  Timeline as TimelineIcon,\n  TrendingUp as TrendingUpIcon,\n  Lightbulb as LightbulbIcon,\n  School as SchoolIcon,\n  Star as StarIcon,\n  Recommend as RecommendIcon,\n  ArrowUpward as ArrowUpIcon,\n  ArrowDownward as ArrowDownIcon,\n  BarChart as BarChartIcon,\n  PieChart as PieChartIcon,\n  BubbleChart as BubbleChartIcon,\n  Visibility as VisibilityIcon,\n  AccessTime as AccessTimeIcon,\n  Search as SearchIcon,\n  QuestionAnswer as QuestionAnswerIcon,\n  Create as CreateIcon\n} from '@mui/icons-material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { \n  BarChart, \n  Bar, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  Legend, \n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  LineChart,\n  Line\n} from 'recharts';\nimport AnalyticsContext from '../context/AnalyticsContext';\nimport AuthContext from '../context/AuthContext';\n\n// Tab Panel component\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`analytics-tabpanel-${index}`}\n      aria-labelledby={`analytics-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nconst Analytics = () => {\n  const theme = useTheme();\n  const { user } = useContext(AuthContext);\n  const {\n    learningProgress,\n    userInsights,\n    recommendations,\n    loading,\n    error,\n    fetchLearningProgress,\n    fetchUserInsights,\n    fetchRecommendations,\n    fetchActivityHistory,\n    trackPageView,\n    getPreferredTopics,\n    getStrengths,\n    getAreasForImprovement,\n    getLearningStyle,\n    getRecommendationsByType\n  } = useContext(AnalyticsContext);\n\n  const [tabValue, setTabValue] = useState(0);\n  const [activityData, setActivityData] = useState([]);\n\n  useEffect(() => {\n    // Track page view\n    trackPageView('analytics');\n    \n    // Fetch all analytics data\n    fetchLearningProgress();\n    fetchUserInsights();\n    fetchRecommendations();\n    \n    // Generate sample activity data for charts\n    generateSampleActivityData();\n  }, []);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  // Generate sample activity data for charts\n  const generateSampleActivityData = () => {\n    // Last 7 days activity\n    const dailyActivity = [];\n    const now = new Date();\n    \n    for (let i = 6; i >= 0; i--) {\n      const date = new Date();\n      date.setDate(now.getDate() - i);\n      \n      dailyActivity.push({\n        date: date.toLocaleDateString('en-US', { weekday: 'short' }),\n        sessions: Math.floor(Math.random() * 5),\n        questions: Math.floor(Math.random() * 10),\n        content: Math.floor(Math.random() * 3)\n      });\n    }\n    \n    setActivityData(dailyActivity);\n  };\n\n  // Get learning style description\n  const getLearningStyleDescription = (style) => {\n    switch (style) {\n      case 'visual':\n        return 'You learn best through visual aids like images, videos, and diagrams.';\n      case 'auditory':\n        return 'You learn best through listening and verbal communication.';\n      case 'reading':\n        return 'You learn best through reading and writing text-based content.';\n      case 'kinesthetic':\n        return 'You learn best through hands-on activities and interactive exercises.';\n      case 'multimodal':\n        return 'You have a balanced learning style that adapts to different content types.';\n      default:\n        return 'Your learning style is still being analyzed based on your activity.';\n    }\n  };\n\n  // COLORS for charts\n  const COLORS = [\n    theme.palette.primary.main,\n    theme.palette.secondary.main,\n    theme.palette.success.main,\n    theme.palette.warning.main,\n    theme.palette.error.main,\n    theme.palette.info.main\n  ];\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '70vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Learning Analytics\n        </Typography>\n        <Paper sx={{ p: 3, textAlign: 'center' }}>\n          <Typography color=\"error\" variant=\"body1\">\n            {error}\n          </Typography>\n        </Paper>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Learning Analytics & Insights\n      </Typography>\n\n      <Paper sx={{ mb: 4 }}>\n        <Tabs\n          value={tabValue}\n          onChange={handleTabChange}\n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          <Tab icon={<TrendingUpIcon />} label=\"Overview\" />\n          <Tab icon={<LightbulbIcon />} label=\"Insights\" />\n          <Tab icon={<RecommendIcon />} label=\"Recommendations\" />\n          <Tab icon={<TimelineIcon />} label=\"Progress\" />\n        </Tabs>\n\n        {/* Overview Tab */}\n        <TabPanel value={tabValue} index={0}>\n          <Typography variant=\"h5\" gutterBottom>\n            Learning Overview\n          </Typography>\n          \n          <Grid container spacing={3}>\n            {/* Activity Summary */}\n            <Grid item xs={12} md={8}>\n              <Paper sx={{ p: 2, height: '100%' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Recent Activity\n                </Typography>\n                \n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <BarChart\n                    data={activityData}\n                    margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"date\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"sessions\" name=\"Learning Sessions\" fill={theme.palette.primary.main} />\n                    <Bar dataKey=\"questions\" name=\"Questions Asked\" fill={theme.palette.secondary.main} />\n                    <Bar dataKey=\"content\" name=\"Content Created\" fill={theme.palette.success.main} />\n                  </BarChart>\n                </ResponsiveContainer>\n              </Paper>\n            </Grid>\n            \n            {/* Learning Style */}\n            <Grid item xs={12} md={4}>\n              <Paper sx={{ p: 2, height: '100%' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Your Learning Style\n                </Typography>\n                \n                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mt: 2 }}>\n                  <PieChart width={200} height={200}>\n                    <Pie\n                      data={[\n                        { name: 'Visual', value: userInsights?.learningStyle === 'visual' ? 100 : 20 },\n                        { name: 'Reading', value: userInsights?.learningStyle === 'reading' ? 100 : 20 },\n                        { name: 'Kinesthetic', value: userInsights?.learningStyle === 'kinesthetic' ? 100 : 20 },\n                        { name: 'Multimodal', value: userInsights?.learningStyle === 'multimodal' ? 100 : 20 }\n                      ]}\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      innerRadius={40}\n                      outerRadius={80}\n                      paddingAngle={5}\n                      dataKey=\"value\"\n                    >\n                      {[0, 1, 2, 3].map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                  \n                  <Typography variant=\"h6\" sx={{ mt: 2, textTransform: 'capitalize' }}>\n                    {getLearningStyle() || 'Multimodal'}\n                  </Typography>\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1, textAlign: 'center' }}>\n                    {getLearningStyleDescription(getLearningStyle())}\n                  </Typography>\n                </Box>\n              </Paper>\n            </Grid>\n            \n            {/* Topic Progress */}\n            <Grid item xs={12}>\n              <Paper sx={{ p: 2 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Topic Progress\n                </Typography>\n                \n                <Grid container spacing={2}>\n                  {learningProgress && learningProgress.length > 0 ? (\n                    learningProgress.map((progress) => (\n                      <Grid item xs={12} sm={6} md={4} key={progress._id}>\n                        <Card variant=\"outlined\">\n                          <CardContent>\n                            <Typography variant=\"subtitle1\" gutterBottom>\n                              {progress.topic}\n                            </Typography>\n                            \n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                              <Box sx={{ width: '100%', mr: 1 }}>\n                                <LinearProgress \n                                  variant=\"determinate\" \n                                  value={progress.overallProgress} \n                                  color={progress.overallProgress > 70 ? \"success\" : \"primary\"}\n                                  sx={{ height: 10, borderRadius: 5 }}\n                                />\n                              </Box>\n                              <Box sx={{ minWidth: 35 }}>\n                                <Typography variant=\"body2\" color=\"text.secondary\">\n                                  {progress.overallProgress}%\n                                </Typography>\n                              </Box>\n                            </Box>\n                            \n                            <Typography variant=\"caption\" color=\"text.secondary\">\n                              Time spent: {Math.round(progress.timeSpent / 60)} minutes\n                            </Typography>\n                          </CardContent>\n                        </Card>\n                      </Grid>\n                    ))\n                  ) : (\n                    <Grid item xs={12}>\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center', p: 2 }}>\n                        No topic progress data available yet. Start learning to see your progress!\n                      </Typography>\n                    </Grid>\n                  )}\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </TabPanel>\n\n        {/* Insights Tab */}\n        <TabPanel value={tabValue} index={1}>\n          <Typography variant=\"h5\" gutterBottom>\n            Learning Insights\n          </Typography>\n          \n          <Grid container spacing={3}>\n            {/* Preferred Topics */}\n            <Grid item xs={12} md={6}>\n              <Paper sx={{ p: 2, height: '100%' }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                  <StarIcon color=\"primary\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\">\n                    Your Preferred Topics\n                  </Typography>\n                </Box>\n                \n                <List>\n                  {getPreferredTopics(5).length > 0 ? (\n                    getPreferredTopics(5).map((topic, index) => (\n                      <ListItem key={index}>\n                        <ListItemIcon>\n                          <SchoolIcon color={index < 3 ? \"primary\" : \"action\"} />\n                        </ListItemIcon>\n                        <ListItemText \n                          primary={topic.topic} \n                          secondary={`Interest level: ${topic.score}%`}\n                        />\n                        <LinearProgress \n                          variant=\"determinate\" \n                          value={topic.score} \n                          sx={{ width: 100, height: 8, borderRadius: 4 }}\n                        />\n                      </ListItem>\n                    ))\n                  ) : (\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ p: 2 }}>\n                      Continue learning to discover your preferred topics.\n                    </Typography>\n                  )}\n                </List>\n              </Paper>\n            </Grid>\n            \n            {/* Strengths & Areas for Improvement */}\n            <Grid item xs={12} md={6}>\n              <Paper sx={{ p: 2, height: '100%' }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                  <TrendingUpIcon color=\"success\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\">\n                    Strengths & Areas for Improvement\n                  </Typography>\n                </Box>\n                \n                <Typography variant=\"subtitle2\" color=\"success.main\" sx={{ mt: 2, mb: 1 }}>\n                  Your Strengths\n                </Typography>\n                \n                <List dense>\n                  {getStrengths(3).length > 0 ? (\n                    getStrengths(3).map((strength, index) => (\n                      <ListItem key={index}>\n                        <ListItemIcon>\n                          <ArrowUpIcon color=\"success\" />\n                        </ListItemIcon>\n                        <ListItemText \n                          primary={strength.topic} \n                          secondary={`Proficiency: ${strength.score}%`}\n                        />\n                      </ListItem>\n                    ))\n                  ) : (\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ pl: 2 }}>\n                      Keep learning to identify your strengths.\n                    </Typography>\n                  )}\n                </List>\n                \n                <Divider sx={{ my: 2 }} />\n                \n                <Typography variant=\"subtitle2\" color=\"error.main\" sx={{ mt: 2, mb: 1 }}>\n                  Areas for Improvement\n                </Typography>\n                \n                <List dense>\n                  {getAreasForImprovement(3).length > 0 ? (\n                    getAreasForImprovement(3).map((area, index) => (\n                      <ListItem key={index}>\n                        <ListItemIcon>\n                          <ArrowDownIcon color=\"error\" />\n                        </ListItemIcon>\n                        <ListItemText \n                          primary={area.topic} \n                          secondary={`Current level: ${100 - area.score}%`}\n                        />\n                      </ListItem>\n                    ))\n                  ) : (\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ pl: 2 }}>\n                      Continue learning to identify areas for improvement.\n                    </Typography>\n                  )}\n                </List>\n              </Paper>\n            </Grid>\n            \n            {/* Learning Patterns */}\n            <Grid item xs={12}>\n              <Paper sx={{ p: 2 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Learning Patterns\n                </Typography>\n                \n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6} md={3}>\n                    <Card variant=\"outlined\" sx={{ height: '100%' }}>\n                      <CardContent>\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                          Preferred Time\n                        </Typography>\n                        <Typography variant=\"h5\" sx={{ textTransform: 'capitalize' }}>\n                          {userInsights?.learningPatterns?.preferredTimeOfDay || 'Varied'}\n                        </Typography>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6} md={3}>\n                    <Card variant=\"outlined\" sx={{ height: '100%' }}>\n                      <CardContent>\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                          Avg. Session Duration\n                        </Typography>\n                        <Typography variant=\"h5\">\n                          {userInsights?.learningPatterns?.averageSessionDuration \n                            ? Math.round(userInsights.learningPatterns.averageSessionDuration / 60) \n                            : 0} min\n                        </Typography>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6} md={3}>\n                    <Card variant=\"outlined\" sx={{ height: '100%' }}>\n                      <CardContent>\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                          Sessions per Week\n                        </Typography>\n                        <Typography variant=\"h5\">\n                          {userInsights?.learningPatterns?.sessionsPerWeek || 0}\n                        </Typography>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6} md={3}>\n                    <Card variant=\"outlined\" sx={{ height: '100%' }}>\n                      <CardContent>\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                          Consistency Score\n                        </Typography>\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                          <Typography variant=\"h5\">\n                            {userInsights?.learningPatterns?.consistencyScore || 0}\n                          </Typography>\n                          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ ml: 1 }}>\n                            /100\n                          </Typography>\n                        </Box>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </TabPanel>\n\n        {/* Recommendations Tab */}\n        <TabPanel value={tabValue} index={2}>\n          <Typography variant=\"h5\" gutterBottom>\n            Personalized Recommendations\n          </Typography>\n          \n          <Grid container spacing={3}>\n            {/* Content Recommendations */}\n            <Grid item xs={12} md={6}>\n              <Paper sx={{ p: 2, height: '100%' }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                  <VisibilityIcon color=\"primary\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\">\n                    Recommended Content\n                  </Typography>\n                </Box>\n                \n                <List>\n                  {getRecommendationsByType('content', 5).length > 0 ? (\n                    getRecommendationsByType('content', 5).map((rec, index) => (\n                      <ListItem key={index} alignItems=\"flex-start\">\n                        <ListItemText\n                          primary={\n                            <Typography variant=\"subtitle1\" component={RouterLink} to={`/content/${rec.item}`} sx={{ textDecoration: 'none' }}>\n                              {rec.content?.title || `Content ${index + 1}`}\n                            </Typography>\n                          }\n                          secondary={\n                            <>\n                              <Typography variant=\"body2\" color=\"text.secondary\" component=\"span\">\n                                {rec.reason}\n                              </Typography>\n                              <Box sx={{ mt: 1 }}>\n                                <Chip \n                                  size=\"small\" \n                                  label={`Relevance: ${rec.score}%`} \n                                  color=\"primary\" \n                                  variant=\"outlined\"\n                                />\n                              </Box>\n                            </>\n                          }\n                        />\n                      </ListItem>\n                    ))\n                  ) : (\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ p: 2 }}>\n                      No content recommendations available yet. Continue learning to get personalized suggestions.\n                    </Typography>\n                  )}\n                </List>\n              </Paper>\n            </Grid>\n            \n            {/* Topic Recommendations */}\n            <Grid item xs={12} md={6}>\n              <Paper sx={{ p: 2, height: '100%' }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                  <SchoolIcon color=\"secondary\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\">\n                    Recommended Topics\n                  </Typography>\n                </Box>\n                \n                <List>\n                  {getRecommendationsByType('topic', 5).length > 0 ? (\n                    getRecommendationsByType('topic', 5).map((rec, index) => (\n                      <ListItem key={index}>\n                        <ListItemText\n                          primary={rec.item}\n                          secondary={rec.reason}\n                        />\n                        <Button \n                          variant=\"outlined\" \n                          size=\"small\" \n                          component={RouterLink} \n                          to={`/learn?topic=${encodeURIComponent(rec.item)}`}\n                        >\n                          Explore\n                        </Button>\n                      </ListItem>\n                    ))\n                  ) : (\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ p: 2 }}>\n                      No topic recommendations available yet. Continue learning to get personalized suggestions.\n                    </Typography>\n                  )}\n                </List>\n              </Paper>\n            </Grid>\n            \n            {/* Feature Recommendations */}\n            <Grid item xs={12}>\n              <Paper sx={{ p: 2 }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                  <LightbulbIcon color=\"warning\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\">\n                    Recommended Features to Try\n                  </Typography>\n                </Box>\n                \n                <Grid container spacing={2}>\n                  {getRecommendationsByType('feature', 6).length > 0 ? (\n                    getRecommendationsByType('feature', 6).map((rec, index) => (\n                      <Grid item xs={12} sm={6} md={4} key={index}>\n                        <Card variant=\"outlined\">\n                          <CardContent>\n                            <Typography variant=\"subtitle1\" sx={{ textTransform: 'capitalize' }}>\n                              {rec.item.replace('_', ' ')}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                              {rec.reason}\n                            </Typography>\n                            <Button \n                              variant=\"contained\" \n                              size=\"small\" \n                              color=\"primary\"\n                              component={RouterLink}\n                              to={getFeatureLink(rec.item)}\n                            >\n                              Try Now\n                            </Button>\n                          </CardContent>\n                        </Card>\n                      </Grid>\n                    ))\n                  ) : (\n                    <Grid item xs={12}>\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center', p: 2 }}>\n                        No feature recommendations available yet. Continue using the platform to get personalized suggestions.\n                      </Typography>\n                    </Grid>\n                  )}\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </TabPanel>\n\n        {/* Progress Tab */}\n        <TabPanel value={tabValue} index={3}>\n          <Typography variant=\"h5\" gutterBottom>\n            Learning Progress\n          </Typography>\n          \n          <Grid container spacing={3}>\n            {/* Progress Overview */}\n            <Grid item xs={12}>\n              <Paper sx={{ p: 2 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Progress Overview\n                </Typography>\n                \n                {learningProgress && learningProgress.length > 0 ? (\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <BarChart\n                      data={learningProgress.map(p => ({\n                        topic: p.topic,\n                        progress: p.overallProgress,\n                        timeSpent: Math.round(p.timeSpent / 60) // Convert to minutes\n                      }))}\n                      margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                    >\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"topic\" />\n                      <YAxis yAxisId=\"left\" orientation=\"left\" stroke={theme.palette.primary.main} />\n                      <YAxis yAxisId=\"right\" orientation=\"right\" stroke={theme.palette.secondary.main} />\n                      <Tooltip />\n                      <Legend />\n                      <Bar yAxisId=\"left\" dataKey=\"progress\" name=\"Progress (%)\" fill={theme.palette.primary.main} />\n                      <Bar yAxisId=\"right\" dataKey=\"timeSpent\" name=\"Time Spent (min)\" fill={theme.palette.secondary.main} />\n                    </BarChart>\n                  </ResponsiveContainer>\n                ) : (\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center', p: 2 }}>\n                    No progress data available yet. Start learning to see your progress!\n                  </Typography>\n                )}\n              </Paper>\n            </Grid>\n            \n            {/* Detailed Progress */}\n            <Grid item xs={12}>\n              <Paper sx={{ p: 2 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Detailed Topic Progress\n                </Typography>\n                \n                {learningProgress && learningProgress.length > 0 ? (\n                  <Grid container spacing={2}>\n                    {learningProgress.map((progress) => (\n                      <Grid item xs={12} key={progress._id}>\n                        <Card variant=\"outlined\">\n                          <CardContent>\n                            <Typography variant=\"h6\" gutterBottom>\n                              {progress.topic}\n                            </Typography>\n                            \n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                              <Box sx={{ width: '100%', mr: 1 }}>\n                                <LinearProgress \n                                  variant=\"determinate\" \n                                  value={progress.overallProgress} \n                                  color={progress.overallProgress > 70 ? \"success\" : \"primary\"}\n                                  sx={{ height: 10, borderRadius: 5 }}\n                                />\n                              </Box>\n                              <Box sx={{ minWidth: 35 }}>\n                                <Typography variant=\"body2\" color=\"text.secondary\">\n                                  {progress.overallProgress}%\n                                </Typography>\n                              </Box>\n                            </Box>\n                            \n                            <Typography variant=\"subtitle2\" gutterBottom>\n                              Subtopics:\n                            </Typography>\n                            \n                            {progress.subtopics && progress.subtopics.length > 0 ? (\n                              <Grid container spacing={2}>\n                                {progress.subtopics.map((subtopic, index) => (\n                                  <Grid item xs={12} sm={6} md={4} key={index}>\n                                    <Box sx={{ mb: 1 }}>\n                                      <Typography variant=\"body2\">\n                                        {subtopic.name}\n                                      </Typography>\n                                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                        <Box sx={{ width: '100%', mr: 1 }}>\n                                          <LinearProgress \n                                            variant=\"determinate\" \n                                            value={subtopic.progress} \n                                            sx={{ height: 6, borderRadius: 3 }}\n                                          />\n                                        </Box>\n                                        <Box sx={{ minWidth: 35 }}>\n                                          <Typography variant=\"caption\" color=\"text.secondary\">\n                                            {subtopic.progress}%\n                                          </Typography>\n                                        </Box>\n                                      </Box>\n                                    </Box>\n                                  </Grid>\n                                ))}\n                              </Grid>\n                            ) : (\n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                No subtopics available for this topic.\n                              </Typography>\n                            )}\n                            \n                            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                Time spent: {Math.round(progress.timeSpent / 60)} minutes\n                              </Typography>\n                              \n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                Last activity: {new Date(progress.lastActivity).toLocaleDateString()}\n                              </Typography>\n                            </Box>\n                          </CardContent>\n                        </Card>\n                      </Grid>\n                    ))}\n                  </Grid>\n                ) : (\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center', p: 2 }}>\n                    No detailed progress data available yet. Start learning to see your progress!\n                  </Typography>\n                )}\n              </Paper>\n            </Grid>\n          </Grid>\n        </TabPanel>\n      </Paper>\n    </Container>\n  );\n};\n\n// Helper function to get link for feature recommendations\nconst getFeatureLink = (feature) => {\n  switch (feature) {\n    case 'content_creation':\n      return '/content/create';\n    case 'search':\n      return '/learn';\n    case 'question_asking':\n      return '/learn';\n    case 'learning_paths':\n      return '/learning-path';\n    case 'notes':\n      return '/profile';\n    case 'bookmarks':\n      return '/history';\n    default:\n      return '/dashboard';\n  }\n};\n\nexport default Analytics;\n"],"names":["TabPanel","props","children","value","index","other","_jsx","role","hidden","id","Box","sx","p","getFeatureLink","feature","Analytics","_userInsights$learnin","_userInsights$learnin2","_userInsights$learnin3","_userInsights$learnin4","theme","useTheme","user","useContext","AuthContext","learningProgress","userInsights","recommendations","loading","error","fetchLearningProgress","fetchUserInsights","fetchRecommendations","fetchActivityHistory","trackPageView","getPreferredTopics","getStrengths","getAreasForImprovement","getLearningStyle","getRecommendationsByType","AnalyticsContext","tabValue","setTabValue","useState","activityData","setActivityData","useEffect","generateSampleActivityData","dailyActivity","now","Date","i","date","setDate","getDate","push","toLocaleDateString","weekday","sessions","Math","floor","random","questions","content","COLORS","palette","primary","main","secondary","success","warning","info","display","justifyContent","alignItems","minHeight","CircularProgress","_jsxs","Container","maxWidth","mt","mb","Typography","variant","component","gutterBottom","Paper","textAlign","color","Tabs","onChange","handleTabChange","event","newValue","indicatorColor","textColor","Tab","icon","TrendingUpIcon","label","LightbulbIcon","RecommendIcon","TimelineIcon","Grid","container","spacing","item","xs","md","height","ResponsiveContainer","width","BarChart","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","name","fill","flexDirection","PieChart","Pie","learningStyle","cx","cy","innerRadius","outerRadius","paddingAngle","map","entry","Cell","length","textTransform","style","getLearningStyleDescription","progress","sm","Card","CardContent","topic","mr","LinearProgress","overallProgress","borderRadius","minWidth","round","timeSpent","_id","StarIcon","List","ListItem","ListItemIcon","SchoolIcon","ListItemText","score","dense","strength","ArrowUpIcon","pl","Divider","my","area","ArrowDownIcon","learningPatterns","preferredTimeOfDay","averageSessionDuration","sessionsPerWeek","consistencyScore","ml","VisibilityIcon","rec","_rec$content","RouterLink","to","textDecoration","title","_Fragment","reason","Chip","size","Button","encodeURIComponent","replace","yAxisId","orientation","stroke","subtopics","subtopic","lastActivity"],"sourceRoot":""}